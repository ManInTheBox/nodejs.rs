article.post.single
  .main-content
    != messages()
    #ajaxResponse
    h3
      a(href='/post/#{post.titleUrl}')= post.title
    p.post-info Napisao 
      a(href='/user/#{post._owner.name.username}')= post._owner.name.full || post._owner.name.username
      | , dana #{post.createdAtFormatted}
      span(style='float: right;')
        a(href='/post/#{post.titleUrl}/download', id='download') Preuzmi
        br
        span.download-box(style='display: none; float: right; background: #F3F4F5; border: 1px solid #E4E6E9; padding: 0 5px;')
          a(href='/post/#{post.titleUrl}/download') Kao HTML format 
          br
          a(href='/post/#{post.titleUrl}.md/download') Kao Mark down format
          br
          a(href='/post/#{post.titleUrl}.pdf/download') Kao PDF format
      - if (canEditPost)
        a(href='/post/#{post.titleUrl}/edit') Edituj 
        | |  
        a(href='#', id='deletePost') Obriši

    div!= post.content
    a(href='#top', class='back-to-top') vrh

- if (session.user)
  != partial('_addComment')
- else
  a(href='/login?returnUrl=' + encodeURIComponent('/post/#{post.titleUrl}#add-comment')) Dodaj komentar

div(class='post-bottom-section', id='comments')  
  h3 Komentari korisnika
  .primary
    ol.commentlist
      - each comment in post.comments
        li(class=comment.cssClass)
          div(id='comment-#{comment._id}')
            .comment-info
              a(href='/user/#{comment._ownerUsername}'): img(src='/images/users/#{comment._ownerUsername}_small.jpg')
              cite
                a(href='/user/#{comment._ownerUsername}')= comment._ownerFullName || comment._ownerUsername
                |  je napisao:
                br
                span.comment-data
                  a(href='/post/#{post.titleUrl}#comment-#{comment._id}')= comment.createdAtFormatted
                  - if (canEditPost || session.user && session.user._id == comment._owner)
                    span(style='padding-left: 20px;')
                      a(href='#', rel="#{comment._id}", class='editComment')  Izmeni 
                      | | 
                      a(href='#', rel='#{comment._id}', class='deleteComment') Obriši
            .comment-text
              != comment.text

script(type='text/javascript')
  $('#deletePost').on('click', function (e) {
    e.preventDefault();
    confirm('Da li sigurno želite da obrišete vaš članak?')
    ?
    $.ajax({
      url: '/post/#{post._id}/delete',
      type: 'POST',
      data: { 
        '_method': 'DELETE',
        '_csrf': '#{csrfToken}'
      },
      success: function (response) {
        window.location.href = '/post';
      },
      error: function (xhr) {
        console.log(xhr.responseText);
      }
    })
    : false;
  });

script(type='text/javascript')
  $('.deleteComment').on('click', function (e) {
    var self = this;
    e.preventDefault();
    confirm('Da li sigurno želite da obrišete vaš komentar?')
    ?
    $.ajax({
      url: '/post/#{post._id}/comment/' + $(this).attr('rel') + '/delete',
      type: 'POST',
      data: { 
        '_method': 'DELETE',
        '_csrf': '#{csrfToken}'
      },
      success: function (response) {
        $('#ajaxResponse').attr('id', 'messages');
        $('#messages').html(
          '<ul class="success"><li>' + response + '</li></ul>'
        );
        $(self).parents('li.depth-1').slideUp(50, function () {
          $(self).remove();
          $("html, body").animate({
              scrollTop: 0
            }, {
            duration: 400,
            easing: "swing"
          });
        });
      },
      error: function (xhr) {
        console.log(xhr.responseText);
      }
    })
    : false;
  });

script(type='text/javascript')
  $('.editComment').toggle(function () {
    var commentBox = $(this).parents('li.depth-1').find('.comment-text');
    commentBox.html('<textarea>' + commentBox.text() + '</textarea>');
    $(this).text('Sačuvaj ');
    commentBox.find('textarea').focus();
  }, function () {
    var self = this;
    var commentBox = $(this).parents('li.depth-1').find('.comment-text');
    var newText = commentBox.find('textarea').val();
    $(this).text('Izmeni ');

    $.ajax({
      url: '/post/#{post._id}/comment/' + $(this).attr('rel') + '/edit',
      type: 'POST',
      data: {
        '_method': 'PUT',
        '_csrf': '#{csrfToken}',
        'text': newText
      },
      success: function (r) {
        $('#ajaxResponse').attr('id', 'messages');
        if (r.err) {
          $('#messages').html(
            '<ul class="error"><li>' + r.err + '</li></ul>'
          );
        } else {
          $('#messages').html(
            '<ul class="success"><li>' + r.msg + '</li></ul>'
          );
          newText = r.text;
        }
        commentBox.html(newText);
        $("html, body").animate({
            scrollTop: 0
          }, {
          duration: 400,
          easing: "swing"
        });
      },
      error: function (xhr) {
        console.log(xhr.responseText);
      }
    });
  });

  $('#download').toggle(function () {
    $('.download-box').show(200);
  }, function () {
    $('.download-box').hide(200);
  });